/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDateTime;

import jooq.enums.NoteAccess;
import jooq.tables.UserNoteOwnership;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserNoteOwnershipRecord extends UpdatableRecordImpl<UserNoteOwnershipRecord> implements Record6<Integer, LocalDateTime, Integer, Integer, Integer, NoteAccess> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_note_ownership.id</code>.
     */
    public UserNoteOwnershipRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_note_ownership.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_note_ownership.created</code>.
     */
    public UserNoteOwnershipRecord setCreated(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_note_ownership.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.user_note_ownership.user_id</code>.
     */
    public UserNoteOwnershipRecord setUserId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_note_ownership.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.user_note_ownership.note_id</code>.
     */
    public UserNoteOwnershipRecord setNoteId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_note_ownership.note_id</code>.
     */
    public Integer getNoteId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.user_note_ownership.organization_id</code>.
     */
    public UserNoteOwnershipRecord setOrganizationId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user_note_ownership.organization_id</code>.
     */
    public Integer getOrganizationId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.user_note_ownership.note_access</code>.
     */
    public UserNoteOwnershipRecord setNoteAccess(NoteAccess value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user_note_ownership.note_access</code>.
     */
    public NoteAccess getNoteAccess() {
        return (NoteAccess) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, LocalDateTime, Integer, Integer, Integer, NoteAccess> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, LocalDateTime, Integer, Integer, Integer, NoteAccess> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserNoteOwnership.USER_NOTE_OWNERSHIP.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserNoteOwnership.USER_NOTE_OWNERSHIP.CREATED;
    }

    @Override
    public Field<Integer> field3() {
        return UserNoteOwnership.USER_NOTE_OWNERSHIP.USER_ID;
    }

    @Override
    public Field<Integer> field4() {
        return UserNoteOwnership.USER_NOTE_OWNERSHIP.NOTE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return UserNoteOwnership.USER_NOTE_OWNERSHIP.ORGANIZATION_ID;
    }

    @Override
    public Field<NoteAccess> field6() {
        return UserNoteOwnership.USER_NOTE_OWNERSHIP.NOTE_ACCESS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreated();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public Integer component4() {
        return getNoteId();
    }

    @Override
    public Integer component5() {
        return getOrganizationId();
    }

    @Override
    public NoteAccess component6() {
        return getNoteAccess();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreated();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public Integer value4() {
        return getNoteId();
    }

    @Override
    public Integer value5() {
        return getOrganizationId();
    }

    @Override
    public NoteAccess value6() {
        return getNoteAccess();
    }

    @Override
    public UserNoteOwnershipRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserNoteOwnershipRecord value2(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public UserNoteOwnershipRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserNoteOwnershipRecord value4(Integer value) {
        setNoteId(value);
        return this;
    }

    @Override
    public UserNoteOwnershipRecord value5(Integer value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public UserNoteOwnershipRecord value6(NoteAccess value) {
        setNoteAccess(value);
        return this;
    }

    @Override
    public UserNoteOwnershipRecord values(Integer value1, LocalDateTime value2, Integer value3, Integer value4, Integer value5, NoteAccess value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserNoteOwnershipRecord
     */
    public UserNoteOwnershipRecord() {
        super(UserNoteOwnership.USER_NOTE_OWNERSHIP);
    }

    /**
     * Create a detached, initialised UserNoteOwnershipRecord
     */
    public UserNoteOwnershipRecord(Integer id, LocalDateTime created, Integer userId, Integer noteId, Integer organizationId, NoteAccess noteAccess) {
        super(UserNoteOwnership.USER_NOTE_OWNERSHIP);

        setId(id);
        setCreated(created);
        setUserId(userId);
        setNoteId(noteId);
        setOrganizationId(organizationId);
        setNoteAccess(noteAccess);
    }
}
