/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDateTime;

import jooq.enums.NoteCategoryAccess;
import jooq.tables.UserNotecategoryOwnership;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserNotecategoryOwnershipRecord extends UpdatableRecordImpl<UserNotecategoryOwnershipRecord> implements Record6<Integer, LocalDateTime, Integer, Integer, Integer, NoteCategoryAccess> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_notecategory_ownership.id</code>.
     */
    public UserNotecategoryOwnershipRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notecategory_ownership.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_notecategory_ownership.created</code>.
     */
    public UserNotecategoryOwnershipRecord setCreated(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notecategory_ownership.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.user_notecategory_ownership.user_id</code>.
     */
    public UserNotecategoryOwnershipRecord setUserId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notecategory_ownership.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.user_notecategory_ownership.category_id</code>.
     */
    public UserNotecategoryOwnershipRecord setCategoryId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_notecategory_ownership.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>public.user_notecategory_ownership.organization_id</code>.
     */
    public UserNotecategoryOwnershipRecord setOrganizationId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.user_notecategory_ownership.organization_id</code>.
     */
    public Integer getOrganizationId() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>public.user_notecategory_ownership.note_category_access</code>.
     */
    public UserNotecategoryOwnershipRecord setNoteCategoryAccess(NoteCategoryAccess value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.user_notecategory_ownership.note_category_access</code>.
     */
    public NoteCategoryAccess getNoteCategoryAccess() {
        return (NoteCategoryAccess) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, LocalDateTime, Integer, Integer, Integer, NoteCategoryAccess> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, LocalDateTime, Integer, Integer, Integer, NoteCategoryAccess> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP.CREATED;
    }

    @Override
    public Field<Integer> field3() {
        return UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP.USER_ID;
    }

    @Override
    public Field<Integer> field4() {
        return UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP.CATEGORY_ID;
    }

    @Override
    public Field<Integer> field5() {
        return UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP.ORGANIZATION_ID;
    }

    @Override
    public Field<NoteCategoryAccess> field6() {
        return UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP.NOTE_CATEGORY_ACCESS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreated();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public Integer component4() {
        return getCategoryId();
    }

    @Override
    public Integer component5() {
        return getOrganizationId();
    }

    @Override
    public NoteCategoryAccess component6() {
        return getNoteCategoryAccess();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreated();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public Integer value4() {
        return getCategoryId();
    }

    @Override
    public Integer value5() {
        return getOrganizationId();
    }

    @Override
    public NoteCategoryAccess value6() {
        return getNoteCategoryAccess();
    }

    @Override
    public UserNotecategoryOwnershipRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserNotecategoryOwnershipRecord value2(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public UserNotecategoryOwnershipRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserNotecategoryOwnershipRecord value4(Integer value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public UserNotecategoryOwnershipRecord value5(Integer value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public UserNotecategoryOwnershipRecord value6(NoteCategoryAccess value) {
        setNoteCategoryAccess(value);
        return this;
    }

    @Override
    public UserNotecategoryOwnershipRecord values(Integer value1, LocalDateTime value2, Integer value3, Integer value4, Integer value5, NoteCategoryAccess value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserNotecategoryOwnershipRecord
     */
    public UserNotecategoryOwnershipRecord() {
        super(UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP);
    }

    /**
     * Create a detached, initialised UserNotecategoryOwnershipRecord
     */
    public UserNotecategoryOwnershipRecord(Integer id, LocalDateTime created, Integer userId, Integer categoryId, Integer organizationId, NoteCategoryAccess noteCategoryAccess) {
        super(UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP);

        setId(id);
        setCreated(created);
        setUserId(userId);
        setCategoryId(categoryId);
        setOrganizationId(organizationId);
        setNoteCategoryAccess(noteCategoryAccess);
    }
}
