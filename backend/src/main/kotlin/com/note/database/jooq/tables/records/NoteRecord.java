/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDateTime;

import jooq.tables.Note;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoteRecord extends UpdatableRecordImpl<NoteRecord> implements Record6<Integer, String, String, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.note.id</code>.
     */
    public NoteRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.note.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.note.title</code>.
     */
    public NoteRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.note.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.note.content</code>.
     */
    public NoteRecord setContent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.note.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.note.created</code>.
     */
    public NoteRecord setCreated(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.note.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.note.author_id</code>.
     */
    public NoteRecord setAuthorId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.note.author_id</code>.
     */
    public Integer getAuthorId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.note.note_category</code>.
     */
    public NoteRecord setNoteCategory(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.note.note_category</code>.
     */
    public Integer getNoteCategory() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Note.NOTE.ID;
    }

    @Override
    public Field<String> field2() {
        return Note.NOTE.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Note.NOTE.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Note.NOTE.CREATED;
    }

    @Override
    public Field<Integer> field5() {
        return Note.NOTE.AUTHOR_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Note.NOTE.NOTE_CATEGORY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public LocalDateTime component4() {
        return getCreated();
    }

    @Override
    public Integer component5() {
        return getAuthorId();
    }

    @Override
    public Integer component6() {
        return getNoteCategory();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public LocalDateTime value4() {
        return getCreated();
    }

    @Override
    public Integer value5() {
        return getAuthorId();
    }

    @Override
    public Integer value6() {
        return getNoteCategory();
    }

    @Override
    public NoteRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public NoteRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public NoteRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public NoteRecord value4(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public NoteRecord value5(Integer value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public NoteRecord value6(Integer value) {
        setNoteCategory(value);
        return this;
    }

    @Override
    public NoteRecord values(Integer value1, String value2, String value3, LocalDateTime value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NoteRecord
     */
    public NoteRecord() {
        super(Note.NOTE);
    }

    /**
     * Create a detached, initialised NoteRecord
     */
    public NoteRecord(Integer id, String title, String content, LocalDateTime created, Integer authorId, Integer noteCategory) {
        super(Note.NOTE);

        setId(id);
        setTitle(title);
        setContent(content);
        setCreated(created);
        setAuthorId(authorId);
        setNoteCategory(noteCategory);
    }
}
