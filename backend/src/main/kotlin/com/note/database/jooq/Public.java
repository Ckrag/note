/*
 * This file is generated by jOOQ.
 */
package jooq;


import java.util.Arrays;
import java.util.List;

import jooq.tables.Auth;
import jooq.tables.FlywaySchemaHistory;
import jooq.tables.Note;
import jooq.tables.NoteCategory;
import jooq.tables.Organization;
import jooq.tables.UserNoteOwnership;
import jooq.tables.UserNotecategoryOwnership;
import jooq.tables.UserOrganizationMembership;
import jooq.tables.Users;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.auth</code>.
     */
    public final Auth AUTH = Auth.AUTH;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.note</code>.
     */
    public final Note NOTE = Note.NOTE;

    /**
     * The table <code>public.note_category</code>.
     */
    public final NoteCategory NOTE_CATEGORY = NoteCategory.NOTE_CATEGORY;

    /**
     * The table <code>public.organization</code>.
     */
    public final Organization ORGANIZATION = Organization.ORGANIZATION;

    /**
     * The table <code>public.user_note_ownership</code>.
     */
    public final UserNoteOwnership USER_NOTE_OWNERSHIP = UserNoteOwnership.USER_NOTE_OWNERSHIP;

    /**
     * The table <code>public.user_notecategory_ownership</code>.
     */
    public final UserNotecategoryOwnership USER_NOTECATEGORY_OWNERSHIP = UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP;

    /**
     * The table <code>public.user_organization_membership</code>.
     */
    public final UserOrganizationMembership USER_ORGANIZATION_MEMBERSHIP = UserOrganizationMembership.USER_ORGANIZATION_MEMBERSHIP;

    /**
     * The table <code>public.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Auth.AUTH,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Note.NOTE,
            NoteCategory.NOTE_CATEGORY,
            Organization.ORGANIZATION,
            UserNoteOwnership.USER_NOTE_OWNERSHIP,
            UserNotecategoryOwnership.USER_NOTECATEGORY_OWNERSHIP,
            UserOrganizationMembership.USER_ORGANIZATION_MEMBERSHIP,
            Users.USERS
        );
    }
}
